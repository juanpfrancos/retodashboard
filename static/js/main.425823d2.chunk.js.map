{"version":3,"sources":["components/Ciudades.js","components/Genero.js","components/Age.js","App.js","reportWebVitals.js","index.js"],"names":["columns","field","headerName","width","type","Ciudades","props","Container","style","height","Typography","variant","align","gutterBottom","rows","data","pageSize","rowsPerPageOptions","disableSelectionOnClick","sortModel","sort","headerAlign","Genero","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","columnsTeen","columnsYA","columnsAdult","Age","agesOrdered","teen","youngAdult","adult","count","a","push","id","age","total","totalTeen","map","d","reduce","v","totalYA","totalAdult","Grid","container","spacing","item","xs","md","lg","Table","TableHead","TableRow","TableCell","TableBody","App","useState","cities","setCities","setAge","genre","setGenre","ciudadesOrdered","useEffect","Axios","url","then","response","dataObj","casosCiudades","i","ciudad_municipio_nom","contadorCiudades","ciudad","key","parseInt","edad","countAges","totalGenero","j","sexo","contadorGenero","genero","catch","error","console","log","className","AppBar","position","Toolbar","color","noWrap","Box","sx","bgcolor","p","component","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425823d2.chunk.js","sourcesContent":["import React from \"react\"        \r\nimport Typography from '@mui/material/Typography';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst columns = [\r\n  { field: 'ciudad', headerName: 'Ciudad', width: 300 },\r\n  { field: 'total', headerName: 'Total Casos', type: 'number', width: 300 },\r\n];\r\n\r\nexport default function Ciudades(props) {\r\n  return (\r\n   <>\r\n      <Container>\r\n       <div style={{ height: 400, width: '100%' }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>Ranking Ciudades</Typography>\r\n        <DataGrid\r\n          rows={props.data}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n          disableSelectionOnClick\r\n          sortModel= {[{ field: 'total', sort: \"desc\" }]}\r\n          headerAlign=\"center\"\r\n        />\r\n       </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Container from '@mui/material/Container';\r\n\r\nfunction Genero(props){\r\n    const data = {\r\n      labels: ['Mujeres', 'Hombres'],\r\n      datasets: [\r\n        {\r\n          label: 'Contagios',\r\n          data: [props.data['M'], props.data['F']],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    }\r\n    const options = {\r\n        responsive: true\r\n    }\r\n    \r\n    return(\r\n        <Container>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>Casos por GÃ©nero</Typography>\r\n            <Doughnut data={data} options={options}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Genero","import React from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n    const columnsTeen = [\r\n      { field: 'age', headerName: 'Edades 0-20', width: 160 },\r\n      { field: 'total', headerName: 'Total Casos', type: 'number', width: 160 },\r\n    ];\r\n\r\n    const columnsYA = [\r\n      { field: 'age', headerName: 'Edades 20-40', width: 160 },\r\n      { field: 'total', headerName: 'Total Casos', type: 'number', width: 160 },\r\n    ];\r\n\r\n    const columnsAdult = [\r\n      { field: 'age', headerName: 'Edades Mayores de 40', width: 160 },\r\n      { field: 'total', headerName: 'Total Casos', type: 'number', width: 160 },\r\n    ];\r\n\r\n    \r\n    \r\nexport default function Age(props){\r\n    const agesOrdered= []\r\n    const teen = []\r\n    const youngAdult = []\r\n    const adult = []\r\n    let count = 0\r\n\r\n    for (var a in props.data) {\r\n      agesOrdered.push({id:count, age:a, total:props.data[a]});\r\n      count = count+1;\r\n      if ( a < 20){\r\n        teen.push({id:count, age:a, total:props.data[a]});\r\n      }\r\n      if (a >= 20 && a < 40){\r\n        youngAdult.push({id:count, age:a, total:props.data[a]});\r\n      }\r\n      if(a >= 40){\r\n        adult.push({id:count, age:a, total:props.data[a]});\r\n      }\r\n    }\r\n\r\n    const totalTeen = teen.map(d => d['total']).reduce((a, v)=> a + v, 0)\r\n    const totalYA = youngAdult.map(d => d['total']).reduce((a, v)=> a + v, 0)\r\n    const totalAdult = adult.map(d => d['total']).reduce((a, v)=> a + v, 0)\r\n  return(\r\n<>\r\n          <Container>\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>Edades</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6} lg={4}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                  <DataGrid\r\n                    rows={teen}\r\n                    columns={columnsTeen}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    disableSelectionOnClick\r\n                    sortModel= {[{ field: 'age', sort: \"asc\" }]}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={4}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                  <DataGrid\r\n                    rows={youngAdult}\r\n                    columns={columnsYA}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    disableSelectionOnClick\r\n                    sortModel= {[{ field: 'age', sort: \"asc\" }]}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={4}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                  <DataGrid\r\n                    rows={adult}\r\n                    columns={columnsAdult}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    disableSelectionOnClick\r\n                    sortModel= {[{ field: 'age', sort: \"asc\" }]}\r\n                    />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} md={12} lg={12}>\r\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>Total Rangos De Edades</Typography>\r\n                 <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                        Total 0-20\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        Total 20-40\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        Total > 40\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                      <TableRow>\r\n                        <TableCell>{totalTeen}</TableCell>\r\n                        <TableCell>{totalYA}</TableCell>\r\n                        <TableCell>{totalAdult}</TableCell>\r\n                      </TableRow>     \r\n                  </TableBody>\r\n                </Table>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport './App.css';\r\nimport Ciudades from \"./components/Ciudades\";\r\nimport Genero from \"./components/Genero\";\r\nimport Age from \"./components/Age\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nfunction App() {\r\n   const [cities, setCities] = useState([]);\r\n   const [age, setAge] = useState([])\r\n   const [genre, setGenre] = useState([])\r\n   const ciudadesOrdered= []\r\n   let count = 0\r\n  useEffect(() => {\r\n    Axios({\r\n      url: \"https://www.datos.gov.co/resource/gt2j-8ykr.json\",\r\n    })\r\n      .then((response) => {\r\n        const dataObj = response.data\r\n\r\n    //Cities\r\n        const ciudades = dataObj.map(function(i){\r\n          return i.ciudad_municipio_nom\r\n        })\r\n\r\n        const casosCiudades = ciudades.reduce((contadorCiudades, ciudad) =>{\r\n          contadorCiudades[ciudad] = (contadorCiudades[ciudad] || 0) + 1\r\n          return contadorCiudades\r\n        },{})\r\n\r\n        for (var key in casosCiudades) {\r\n          ciudadesOrdered.push({id:count, ciudad:key, total:casosCiudades[key]});\r\n          count = count + 1;\r\n        }\r\n        setCities(ciudadesOrdered)\r\n\r\n    //Ages\r\n        const ages = dataObj.map((i)=> parseInt(i.edad))\r\n        const age = ages.reduce((countAges, age)=>{\r\n          countAges[age] = (countAges[age] || 0)+1\r\n          return countAges\r\n        },{})\r\n        setAge(age)\r\n        \r\n\r\n    //Genre\r\n\r\n        const genero = dataObj.map(function(j){\r\n          return j.sexo\r\n        })\r\n\r\n        const totalGenero = genero.reduce((contadorGenero,genero)=>{\r\n          contadorGenero[genero] = (contadorGenero[genero] || 0)+1\r\n          return contadorGenero\r\n        },{})\r\n        setGenre(totalGenero)\r\n        })\r\n\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n            Dashboard Covid-19 Colombia\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={8} lg={7}>\r\n          <Ciudades data={cities}></Ciudades>\r\n        </Grid>\r\n        <Grid item xs={12} md={8} lg={5}>\r\n          <Genero data={genre}></Genero>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      \r\n      <Age data={age}></Age>\r\n      <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n        >\r\n          ð» Desarrollado por <a href=\"https://github.com/juanpfrancos\">@Juanpfrancos</a>\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}